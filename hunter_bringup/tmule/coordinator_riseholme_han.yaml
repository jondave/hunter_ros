---
session: robot
init_cmd: |
  #exec /bin/bash
  cd @TMULE_CONFIG_DIR@ || true
  set -o pipefail
  function export_default () {
    var_name="$1"
    var_default="$2"
    eval $var_name="${!var_name:-$var_default}"
    export $var_name
    echo "  $0 -> $var_name=${!var_name}"
  }

  
  #############################################################################################
  # HUMAN-AWARE NAVIGATION PARAMETERS
  export_default CATKIN_WORKSPACE "$HOME/catkin_ws"
  export_default CONFIG_DIRECT "$(rospack find gofar_safety)/config/" #directory of han config file
  export_default OPENPOSE_DIRECT "$CATKIN_WORKSPACE/src/openpose/" #directory of openpose
  export_default BAYESIAN_TRACKER_CONFIG "$CONFIG_DIRECT/human_sensing/bayesian_tracking.yaml" # config file for the bayesian human tracker
  
  export_default TWIST_MUX_LOCKS "$CONFIG_DIRECT/twist_mux/twist_mux_locks.yaml" #twist_mux config file
  export_default TWIST_MUX_TOPICS "$CONFIG_DIRECT/twist_mux/twist_mux_topics.yaml" #twist_mux config file
  export_default TELEOP_CONFIG "$CONFIG_DIRECT/teleoperation/teleop_logitech.yaml" #teleoperation config file
  export_default CMD_VEL_AUTO_TOPIC "cmd_vel/auto" # name of topic being published by the main autonomous navigation system
  export_default CMD_VEL_TELEOP_TOPIC "cmd_vel/joystick" #name of topic being published by the joystick commands 
  export_default CMD_VEL_HAN_TOPIC "/han/cmd_vel" #name of topic being published by the HAN system
  export_default CMD_VEL_TWIST_MUX_TOPIC "cmd_vel" #ackermann_steering_controller/cmd_vel (SIMULATED HUNTER) cmd_vel/managed (REAL/SIMULATED ROVER) cmd_vel (REAL HUNTER)
  
  export_default N_CAMERAS 2 # it can be "1" or "2"
  export_default USE_VISUAL_ALERTS true # if "true", colored beacon is activated
  export_default USE_AUDIO_ALERTS true # if "true", voice messages are activated
  export_default USE_OBSTACLE_DETECT true # if "true", obstacle detector is activated
  export_default CAMERA_FRONT_TOPIC_RGB "/realsense/color/image_raw" #"/camera1/color/image_raw" # name of the rgb image topic to be subscribed 
  export_default CAMERA_FRONT_TOPIC_DEPTH "/realsense/aligned_depth_to_color/image_raw" #"/camera1/aligned_depth_to_color/image_raw" # name of the depth image topic to be subscribed
  export_default CAMERA_BACK_TOPIC_RGB "/realsense_rear/color/image_raw" #"/camera1/color/image_raw" #"/camera2/color/image_raw" # name of the rgb image topic to be subscribed 
  export_default CAMERA_BACK_TOPIC_DEPTH "/realsense_rear/aligned_depth_to_color/image_raw" #/camera2/aligned_depth_to_color/image_raw" # name of the depth image topic to be subscribed
  export_default RS_SERIAL_N2 "146222253484" #serial number realsense camera back
  export_default RS_SERIAL_N1 "141722061162" #serial number realsense camera front
  export_default ARDUINO_PORT "/dev/ttyACM0" #name of the port where arduino is connected 
  export_default ROBOT_TYPE "carlike" # kinematics of the robot, options are "carlike", "unicycle"
  
  ##############################################################################################
  # ROBOTIC PLATFORM
  export_default USE_SIM false      # true if uses Gazebo model
  export_default ROBOT_HUSKY false
  export_default ROBOT_HUNTER true
  export_default ROBOT_ROVER false
  export_default ROBOT_GOFAR false
  ##############################################################################################
  # Source ROS
  # source "/opt/ros/$(rosversion -d)/setup.bash"
  source $CATKIN_WORKSPACE/devel/setup.bash
  ##################################################################################################    
  
  # Site details and site specific configs:
  # Used to retrieve site and task specific config files
  export_default FARM_NAME "riseholme"
  export_default FIELD_NAME "polytunnel"
  export_default APPLICATION "transportation"
  
  # Config Paths
  export_default SITE_PATH "$(rospack find gofar_navigation)/config/site_files/${FARM_NAME}/${FIELD_NAME}"
  # Site details
  export_default DATUM_FILE "${SITE_PATH}/datum.yaml"
  export_default METRIC_MAP "${SITE_PATH}/map.yaml" 
  export_default NOGO_MAP "${SITE_PATH}/nogo_map.yaml"
  ###############################################################################################################
  export_default TMAP_FILE "${SITE_PATH}/${APPLICATION}/tmap_row_entrance_node.tmap2" # tmap.tmap2 # tmap_move_base_only.tmap2 # tmap_bearnav2.tmap2
  

  # Navigation
  export_default RECONF_EDGES true
  export_default USE_RESTRICTIONS true
  # NOT WORKING WITH TRUE, IT REQUIRES A TOPIC RELATED TO ROBOT TYPE
  

  # Simulation
  export_default GAZEBO_WORLD_PATH "${SITE_PATH}/riseholme_polytunnel.world" 
  export_default ROBOT_POS_X 0.0 #17.0
  export_default ROBOT_POS_Y 0.0 #-8.0
  export_default ROBOT_POS_A 0.0
   
  # Bearnav2 navigation
  # export_default BEARNAV2_SIM_HUSKY "$(rospack find gofar_navigation)/config/bearnav2_maps/riseholme_gazebo/husky/husky_sim_test_v1"
  export_default BEARNAV2_FRONT_MAP_SIM "husky_sim_test_v1" # simulated front map
  export_default BEARNAV2_REAR_MAP_SIM "husky_sim_test_rear_v1" # simulated rear map
  export_default BEARNAV2_FRONT_MAP "husky_sim_test_v1" # real front map 
  export_default BEARNAV2_REAR_MAP "husky_sim_test_rear_v1" # real rear map
  ################################################################################################# 
  export_default RVIZ_CONFIG $(rospack find hunter_bringup)/viz/topo_nav.rviz
  #################################################################################################

  # Coordinator Riseholme
  export_default ROBOT_NAME "hunter2_002"
  export_default MQTT_BROKER_IP "10.8.0.99"
  export_default MQTT_BROKER_PORT 8883
  export_default MQTT_ENCODING "msgpack"
  export_default AGENT_SETUP_CONFIG "$(rospack find gofar_navigation)/config/server_representation.yaml"
  export ROS_MASTER_URI="http://10.8.0.107:11311/" # coordinator local vpn server ip

windows:

# CORE Bringup
#- name: can_setup
#  panes:
#  - sudo ip link set can0 up type can bitrate 500000
#    ^ this should be run by hand to initiate motor connections
#  check: "candump can0 -n 10"

- name: roscore
  panes:
  - roscore
  check: "rostopic list"

- name: robot
  panes:
  - roslaunch hunter_bringup hunter_robot_base.launch #TODO USE THIS include_twistmux:=False
  
- name: twist_mux
  panes:
  - sleep 5 ; rosnode kill /twist_mux ; roslaunch gofar_safety han_twist_mux.launch cmd_vel_out:=$CMD_VEL_TWIST_MUX_TOPIC config_locks:=$TWIST_MUX_LOCKS config_topics:=$TWIST_MUX_TOPICS # to kill any existant twist_mux node and run the one which listen to the han/cmd topic

- name: teleop_joy
  panes:
  - roslaunch gofar_safety han_joy_teleop.launch  teleop_topic:=$CMD_VEL_TELEOP_TOPIC teleop_config_file:=$TELEOP_CONFIG

- name: localization
  panes:
  - roslaunch hunter_bringup amcl.launch map_file:=$METRIC_MAP

# MQTT Communications to Server
- name: mqtt_client
  panes:
  - rosrun gofar_navigation send_details_to_coordinator.py
  - rosrun hunter_bringup mqtt_psuedo_bridge.py
  check: "rostopic echo /topological_map_2 -n 1"
  tags: [mqtt]

#TOPOMAP Management
# Map comes from server, not locally
#- name: topo_map
#  panes:
#  - roslaunch hunter_bringup topological_map_manager2_central.launch tmap_file:=$TMAP_FILE use_restrictions:=$USE_RESTRICTIONS
#  check: "rostopic list | grep -q /topological_map_2"
#  tags: [nav]

- name: topo_loc
  panes:
  - 'rostopic pub /robot_type std_msgs/String "data: hunter"'
  - roslaunch hunter_bringup topological_localisation_robot.launch use_restrictions:=$USE_RESTRICTIONS
  check: "rostopic echo /closest_edges -n 1"
  tags: [nav, site]

- name: topo_nav
  panes:
  - roslaunch hunter_bringup topological_navigation_robot.launch move_base_planner:=move_base/TebLocalPlannerROS reconfigure_edges:=$RECONF_EDGES use_restrictions:=$USE_RESTRICTIONS 
  check: "rosservice list | grep -q topological_navigation"
  tags: [nav, site]

- name: move_base_actions
  panes:
  - roslaunch hunter_bringup move_base_teb.launch cmd_vel_name:=$CMD_VEL_AUTO_TOPIC
  
- name: human_sensing
  panes:
  - sleep 2 ; roslaunch gofar_safety han_human_detector_rgbd.launch config_direct:=$CONFIG_DIRECT n_cameras:=$N_CAMERAS openpose_direct:=$OPENPOSE_DIRECT camera_front_topic_rgb:=$CAMERA_FRONT_TOPIC_RGB camera_front_topic_depth:=$CAMERA_FRONT_TOPIC_DEPTH camera_back_topic_rgb:=$CAMERA_BACK_TOPIC_RGB camera_back_topic_depth:=$CAMERA_BACK_TOPIC_DEPTH 
  - sleep 2 ; roslaunch gofar_safety han_human_tracker.launch param_file:=$BAYESIAN_TRACKER_CONFIG 
- name: obstacle_detection
  panes:
  - sleep 2 ; if $USE_OBSTACLE_DETECT ; then roslaunch gofar_safety han_obstacle_detection.launch cmd_vel_auto_topic:=$CMD_VEL_AUTO_TOPIC cmd_vel_teleop_topic:=$CMD_VEL_TELEOP_TOPIC; fi

- name: safety_system
  panes:
  - roslaunch gofar_safety han_decision_making.launch config_direct:=$CONFIG_DIRECT cmd_vel_auto_topic:=$CMD_VEL_AUTO_TOPIC cmd_vel_teleop_topic:=$CMD_VEL_TELEOP_TOPIC cmd_vel_han_topic:=$CMD_VEL_HAN_TOPIC
  - roslaunch gofar_safety han_velocity_control.launch config_direct:=$CONFIG_DIRECT robot_type:=$ROBOT_TYPE cmd_vel_auto_topic:=$CMD_VEL_AUTO_TOPIC cmd_vel_teleop_topic:=$CMD_VEL_TELEOP_TOPIC cmd_vel_han_topic:=$CMD_VEL_HAN_TOPIC
- name: audiovisual_alerts
  panes:
  - sleep 2 ; roslaunch gofar_safety han_audio_visual_alerts.launch config_direct:=$CONFIG_DIRECT arduino_port:=$ARDUINO_PORT use_visual_alerts:=$USE_VISUAL_ALERTS use_audio_alerts:=$USE_AUDIO_ALERTS
- name: visualization
  panes:
  - rosrun web_video_server web_video_server

- name: rviz
  panes:
  - DISPLAY=:0 rviz -d $RVIZ_CONFIG
  tags: [nav, site]
