---
session: robot
init_cmd: |
  #exec /bin/bash
  cd @TMULE_CONFIG_DIR@ || true
  set -o pipefail
  function export_default () {
    var_name="$1"
    var_default="$2"
    eval $var_name="${!var_name:-$var_default}"
    export $var_name
    echo "  $0 -> $var_name=${!var_name}"
  }

  
  #############################################################################################
  # HUMAN-AWARE NAVIGATION PARAMETERS
  export_default CATKIN_WORKSPACE "$HOME/catkin_ws"
  export_default USE_HAN false # if "false", human aware navigation is not activated
  ##############################################################################################
  # ROBOTIC PLATFORM
  export_default USE_SIM false      # true if uses Gazebo model
  export_default ROBOT_HUSKY false
  export_default ROBOT_HUNTER true
  export_default ROBOT_ROVER false
  export_default ROBOT_GOFAR false
  ##############################################################################################
  # Source ROS
  # source "/opt/ros/$(rosversion -d)/setup.bash"
  source $CATKIN_WORKSPACE/devel/setup.bash
  ##################################################################################################    
  
  # Site details and site specific configs:
  # Used to retrieve site and task specific config files
  export_default FARM_NAME "riseholme"
  export_default FIELD_NAME "polytunnel"
  export_default APPLICATION "transportation"
  
  # Config Paths
  export_default SITE_PATH "$(rospack find gofar_navigation)/config/site_files/${FARM_NAME}/${FIELD_NAME}"
  # Site details
  export_default DATUM_FILE "${SITE_PATH}/datum.yaml"
  export_default METRIC_MAP "${SITE_PATH}/map.yaml" 
  export_default NOGO_MAP "${SITE_PATH}/nogo_map.yaml"
  ###############################################################################################################
  export_default TMAP_FILE "${SITE_PATH}/${APPLICATION}/tmap_row_entrance_node.tmap2" # tmap.tmap2 # tmap_move_base_only.tmap2 # tmap_bearnav2.tmap2
  

  # Navigation
  export_default USE_CARROT false
  export_default RECONF_EDGES true
  export_default USE_RESTRICTIONS true
  # NOT WORKING WITH TRUE, IT REQUIRES A TOPIC RELATED TO ROBOT TYPE
  

  # Simulation
  export_default GAZEBO_WORLD_PATH "${SITE_PATH}/riseholme_polytunnel.world" 
  export_default ROBOT_POS_X 0.0 #17.0
  export_default ROBOT_POS_Y 0.0 #-8.0
  export_default ROBOT_POS_A 0.0
   
  # Bearnav2 navigation
  # export_default BEARNAV2_SIM_HUSKY "$(rospack find gofar_navigation)/config/bearnav2_maps/riseholme_gazebo/husky/husky_sim_test_v1"
  export_default BEARNAV2_FRONT_MAP_SIM "husky_sim_test_v1" # simulated front map
  export_default BEARNAV2_REAR_MAP_SIM "husky_sim_test_rear_v1" # simulated rear map
  export_default BEARNAV2_FRONT_MAP "husky_sim_test_v1" # real front map 
  export_default BEARNAV2_REAR_MAP "husky_sim_test_rear_v1" # real rear map
  ################################################################################################# 
  export_default RVIZ_CONFIG $(rospack find hunter_bringup)/viz/topo_nav.rviz
  #################################################################################################

  # Coordinator Riseholme
  export_default ROBOT_NAME "hunter2_002"
  export_default MQTT_BROKER_IP "10.8.0.99"
  export_default MQTT_BROKER_PORT 8883
  export_default MQTT_ENCODING "msgpack"
  export_default AGENT_SETUP_CONFIG "$(rospack find gofar_navigation)/config/server_representation.yaml"
  export ROS_MASTER_URI="http://10.8.0.107:11311/" # coordinator local vpn server ip

windows:

# CORE Bringup
#- name: can_setup
#  panes:
#  - sudo ip link set can0 up type can bitrate 500000
#    ^ this should be run by hand to initiate motor connections
#  check: "candump can0 -n 10"

- name: roscore
  panes:
  - roscore
  check: "rostopic list"

- name: robot
  panes:
  - roslaunch hunter_bringup hunter_robot_base.launch

- name: localization
  panes:
  - roslaunch hunter_bringup amcl.launch map_file:=$METRIC_MAP

# MQTT Communications to Server
- name: mqtt_client
  panes:
  - rosrun gofar_navigation send_details_to_coordinator.py
  - rosrun hunter_bringup mqtt_psuedo_bridge.py
  check: "rostopic echo /topological_map_2 -n 1"
  tags: [mqtt]

#TOPOMAP Management
# Map comes from server, not locally
#- name: topo_map
#  panes:
#  - roslaunch hunter_bringup topological_map_manager2_central.launch tmap_file:=$TMAP_FILE use_restrictions:=$USE_RESTRICTIONS
#  check: "rostopic list | grep -q /topological_map_2"
#  tags: [nav]

- name: topo_loc
  panes:
  - 'rostopic pub /robot_type std_msgs/String "data: hunter"'
  - roslaunch hunter_bringup topological_localisation_robot.launch use_restrictions:=$USE_RESTRICTIONS
  check: "rostopic echo /closest_edges -n 1"
  tags: [nav, site]

- name: topo_nav
  panes:
  - roslaunch hunter_bringup topological_navigation_robot.launch move_base_planner:=move_base/TebLocalPlannerROS reconfigure_edges:=$RECONF_EDGES use_restrictions:=$USE_RESTRICTIONS use_han:=$USE_HAN
  check: "rosservice list | grep -q topological_navigation"
  tags: [nav, site]

#METRIC Navigation
- name: move_base_actions
  panes:
  - roslaunch hunter_bringup move_base_teb.launch cmd_vel_name:="/move_base/cmd_vel"
  
#- name: in_row_actions
#  panes:
#  - roslaunch gofar_navigation in_row_navigation.launch bearnav2_front_map:=$BEARNAV2_FRONT_MAP_SIM bearnav2_rear_map:=$BEARNAV2_REAR_MAP_SIM cmd_vel_name:="/ackermann_steering_controller/cmd_vel" odom_name:="/odometry/filtered" image_front_name:="/realsense/color/image_raw" image_rear_name:="/realsense_rear/color/image_raw"; else roslaunch gofar_navigation in_row_navigation.launch bearnav2_front_map:=$BEARNAV2_FRONT_MAP bearnav2_rear_map:=$BEARNAV2_REAR_MAP cmd_vel_name:="/cmd_vel" odom_name:="/odometry/filtered" image_front_name:="/realsense/color/image_raw" image_rear_name:="/realsense_rear/color/image_raw"

# VISUALISATION
- name: rviz
  panes:
  - DISPLAY=:0 rviz -d $RVIZ_CONFIG
  tags: [nav, site]
